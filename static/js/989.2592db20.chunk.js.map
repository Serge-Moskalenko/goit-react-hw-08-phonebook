{"version":3,"file":"static/js/989.2592db20.chunk.js","mappings":"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","sources":["redux/selectors.js","redux/Contacts/contactsSelectors.js","components/EditModal/EditModal.jsx","pages/Contacts/ItemContact.jsx","components/Filter.jsx","PhonebookOnReact-hook-form/Phonebook.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["\nexport const selectorContacts = state => state.contacts;\n\nexport const selectorFilter = state => state.filter;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectorFilter } from 'redux/selectors'\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectVisibleContacts = createSelector(\n  [selectorFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizeFilter = filter.trim().toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.trim().toLowerCase().includes(normalizeFilter)\n    );\n  }\n);","import { Modal } from \"@mui/material\"\nimport {useForm} from 'react-hook-form'\nimport { updateContact } from 'redux/Contacts/contactsOperetions';\nimport { useDispatch } from 'react-redux';\n\nexport const EditModal = ({isOpen,closeModal,nameD,numberD,id}) => {\n    const dispatch = useDispatch();\n     const { register, handleSubmit,reset } = useForm({\n  defaultValues: {\n    name:nameD,\n    number:numberD,\n  }\n});\n\n    const handleClickSubmit = ({ name, number }) => {\n        dispatch(updateContact({id,name, number }));\n        reset();\n        closeModal();\n    };\n        return (\n            <>\n            <Modal open={isOpen} onClose={closeModal} >\n                <form onSubmit={handleSubmit(handleClickSubmit)} style={{\n                    border: '2px solid black',\n                    padding: '20px',\n                    width: \"400px\"\n                }}>\n                    <label style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        fontSize: \"16px\",\n                    }}>\n                        Name\n                        <input style={{\n                            width: \"200px\",\n                            height: \"20px\",\n                            marginTop: '10px'\n                        }}\n                            type=\"text\"\n                            {...register(\"name\")}\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            required\n                            maxLength={20}\n      \n                        />\n                    </label>\n\n                    <label style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        fontSize: \"16px\",\n                    }}>\n                        Number\n                        <input style={{\n                            width: \"200px\",\n                            height: \"20px\",\n                            marginTop: '10px'\n                        }}\n                            type=\"tel\"\n                            {...register(\"number\")}\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            required\n                            maxLength={20}\n                        />\n                    </label>\n\n                        <button type=\"submit\" style={{ marginTop: \"20px\" }}>\n                            edit\n                        </button>\n                </form>\n                </Modal>\n                </>\n        )\n    };","import { useState } from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { AiTwotoneEdit } from \"react-icons/ai\";\nimport { deleteContact } from 'redux/Contacts/contactsOperetions';\nimport { selectIsLoading } from 'redux/Contacts/contactsSelectors';\nimport { EditModal } from 'components/EditModal/EditModal';\n\nexport const ItemContact = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading)\n    const [open, setOpen] = useState(false);\n \n    const handleDelete = (id) => {\n        dispatch(deleteContact(id))\n    }\n    \n    return (\n        <>\n            <p>{name}    {number}</p>\n            \n            <button style={{\n                width: '70px',\n                height: '30px',\n                marginLeft: '10px'\n            }}\n                type=\"botton\"\n                onClick={() => handleDelete(id)}\n                disabled={isLoading}\n            >\n                Delete\n            </button>\n                                    \n            <AiTwotoneEdit size='2em' onClick={() => setOpen(true)} />\n            \n            {open && <EditModal isOpen={open} closeModal={() => setOpen(false)} id={id} nameD={name} numberD={number} />}\n        </>\n        \n    )\n};","import { useSelector, useDispatch } from 'react-redux';\nimport { makeFilter } from 'redux/filterSlise';\nimport { selectorFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectorFilter);\n  const dispatch = useDispatch();\n  return (\n    <label style={{\n      display: 'flex',\n      flexDirection: 'column',\n      width: \"200px\",\n      fontSize: \"20px\",\n    }} >\n\n      Find contact by name\n                    \n      <input style={{ marginTop: '10px', }} type='text' value={filter}\n        onChange={e => dispatch(makeFilter(e.target.value))} />\n                    \n    </label>\n  );\n};","import {useForm} from 'react-hook-form'\nimport { addContact } from 'redux/Contacts/contactsOperetions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/Contacts/contactsSelectors';\n\nexport const Phonebook = () => {\n  const dispatch = useDispatch();\n  const contacts= useSelector(selectContacts)\n  const { register, handleSubmit, reset } = useForm();\n\n\n  const handleClickSubmit = ({ name, number }) => {\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n        \n      <form onSubmit={handleSubmit(handleClickSubmit)} style={{\n        border: '2px solid black',\n        padding: '20px',\n        width: \"400px\"\n      }}>\n        <label style={{\n          display: 'flex',\n          flexDirection: 'column',\n          fontSize: \"16px\",\n        }}>\n          Name\n          <input style={{\n            width: \"200px\",\n            height: \"20px\",\n            marginTop: '10px'\n          }}\n            type=\"text\"\n            {...register(\"name\")}\n            placeholder=\"Only text\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            maxLength={20} />\n        </label>\n\n        <label style={{\n          display: 'flex',\n          flexDirection: 'column',\n          fontSize: \"16px\",\n        }}>\n          Number\n          <input style={{\n            width: \"200px\",\n            height: \"20px\",\n            marginTop: '10px'\n          }}\n            type=\"tel\"\n            {...register(\"number\")}\n            placeholder=\"Only number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            maxLength={20} />\n        </label>\n\n        <button type=\"submit\" style={{\n          marginTop: \"20px\"\n        }}\n        >Add contact</button>\n      </form>\n    </>\n\n  )\n};","import { useEffect } from \"react\";\nimport { useSelector,useDispatch } from 'react-redux';\nimport { ItemContact } from \"./ItemContact\";\nimport {selectVisibleContacts,} from 'redux/Contacts/contactsSelectors';\nimport { Filter } from \"components/Filter\";\nimport { Phonebook } from \"PhonebookOnReact-hook-form/Phonebook\";\nimport { fetchContacts } from \"redux/Contacts/contactsOperetions\";\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectVisibleContacts);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n    \n    return (\n        <>\n            <h2>Contacts</h2>\n            <Phonebook />\n            <br />\n            <br />\n            <Filter />\n\n            <ul style={{ listStyle: 'none' }}>\n\n                {contacts.map(({ id, name, number }) => (\n                    <li style={{ display: 'flex', alignItems: 'center' }} key={id}>\n                        <ItemContact id={id} name={name} number={number} />\n                    </li>\n                ))}\n            </ul>\n        </>\n    )\n};\n\nexport default Contacts;"],"names":["selectorFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","normalizeFilter","trim","toLowerCase","contact","name","includes","EditModal","isOpen","closeModal","nameD","numberD","id","dispatch","useDispatch","useForm","defaultValues","number","register","handleSubmit","reset","Modal","open","onClose","onSubmit","updateContact","style","border","padding","width","display","flexDirection","fontSize","height","marginTop","type","pattern","required","maxLength","ItemContact","useSelector","useState","setOpen","marginLeft","onClick","deleteContact","handleDelete","disabled","size","Filter","value","onChange","e","makeFilter","target","Phonebook","some","alert","addContact","placeholder","title","useEffect","fetchContacts","listStyle","map","alignItems"],"sourceRoot":""}